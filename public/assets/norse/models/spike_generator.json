{
  "abbreviation": "sg",
  "elementType": "stimulator",
  "id": "spike_generator",
  "label": "spike generator",
  "codeTemplate": "{{ view.label }} = torch.zeros({{ params.timesteps.value }},{{ size }}){{ #params.spike_times.value }}\n{{ view.label }}[{{ &value }}] = 1{{ /params.spike_times.value }}",
  "params": [
    {
      "id": "timesteps",
      "input": "valueSlider",
      "label": "timesteps",
      "max": 100,
      "min": 0,
      "step": 1,
      "value": 0
    },
    {
      "id": "spike_times",
      "input": "arrayInput",
      "label": "spike times",
      "rules": [
        [
          "value.slice(1).every((item, idx) => value[idx] < item)",
          "The values must be sorted in ascending order.",
          "error"
        ]
      ],
      "unit": "ms"
    },
    {
      "id": "spike_weights",
      "input": "arrayInput",
      "label": "weights of spike",
      "unit": "pA"
    }
  ]
}
